@page "/GetEmployee"
@using Syncfusion.Blazor.Grids
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Employee List</h3>

@if (employees == null)
{
    <p>Loading...</p>
}
else
{
    <SfGrid DataSource="employees" AllowPaging="true">
        <GridColumns>
            <GridColumn Field="Id" HeaderText="ID" IsPrimaryKey="true" Width="100" TextAlign="TextAlign.Center" />
            <GridColumn Field="Name" HeaderText="Name" Width="200" />
            <GridColumn Field="Age" HeaderText="Age" Width="100" TextAlign="TextAlign.Center" />
            <GridColumn Field="Gender" HeaderText="Gender" Width="100" />
            <GridColumn Field="EmpType" HeaderText="Employee Type" Width="150" />
            <GridColumn Field="Languages" HeaderText="Languages" Width="200" />
            <GridColumn HeaderText="Action" Width="150">
                <Template>
                    @{
                        var emp = (EmpTable)@context;
                    }
                    <SfButton CssClass="e-primary" Content="View" @onclick="() => ViewEmployee(emp.Id)" />
                    <SfButton CssClass="e-danger" @onclick="(() => ShowDeleteDialog(emp.Id))">Delete</SfButton>

                </Template>
            </GridColumn>

        </GridColumns>
    </SfGrid>
}

<SfDialog @ref="deleteDialog" Header="Confirm Deletion" ShowCloseIcon="true" IsModal="true" Width="300px" Visible="@isDialogVisible">

    <div class="mb-2">Are you sure you want to delete this employee Record?</div>

    <SfButton CssClass="e-danger" @onclick="DeleteEmployeeConfirmed" style="margin-right: 20px;">Delete</SfButton>
    <SfButton CssClass="e-flat" @onclick="CloseDeleteDialog">Cancel</SfButton>

</SfDialog>

@code {
    private List<EmpTable>? employees;
    private bool isDialogVisible = false;
    private int employeeIdToDelete;
    private SfDialog deleteDialog;
    protected override async Task OnInitializedAsync()
    {
        employees = await Http.GetFromJsonAsync<List<EmpTable>>("https://localhost:7149/api/Student");
    }


    private void ShowDeleteDialog(int id)
    {
        employeeIdToDelete = id;
        isDialogVisible = true;
    }

    private async Task DeleteEmployeeConfirmed()
    {
        var response = await Http.DeleteAsync($"https://localhost:7149/api/Student/{employeeIdToDelete}");

        if (response.IsSuccessStatusCode)
        {
            employees = employees?.Where(e => e.Id != employeeIdToDelete).ToList(); // Update the list
            StateHasChanged();
        }

        CloseDeleteDialog();
    }

    private void CloseDeleteDialog()
    {
        isDialogVisible = false;
    }


    private void ViewEmployee(int employeeId)
    {
        Navigation.NavigateTo($"/addemployee/{employeeId}");
    }

} 